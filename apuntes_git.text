ðŸ”¹git log: te muestra los ultimos commits en la consola
*git log --oneline: te muestra los commits unicamente como nombre de el cambio y el serial
*git log --graph: te muestra todos los cambios de git como una linea de tiempo con los otros branch
*git log --all: todos los commits, hasta de otros branch
*git log --decorate: commits mas bonitos
*ver (alias): todo junto

ðŸ”¹git checkout: siver para volver a una anterior version de un commit dejandolo en staging, y para regresar 
a la del presente se necesita usan el aÃ±adido "master", ademas que sirve para cambiar de ramas de trabajo
*git checkout â€“b: crearÃ¡ una nueva rama y saltarÃ¡ a ella de forma inmediata

ðŸ”¹git branch [Nombre de rama]:crea una nueva rama
*git branch --delete [nombreRama]:borrarÃ¡ la rama que se indique
*git branch â€“D [nombreRama]:fuerza la eliminaciÃ³n de ramas que aÃºn no han sido fusionadas
*git branch â€“v // muestra el Ãºltimo commit de cada rama
*git branch --merged // lista las ramas que se fusionaron con la rama actual
*git branch --no-merged // lista las ramas que no se han fusionado con la rama actual
*git merge --abort // anula el merge y devuelve todo a como estaba antes
*git branch -m oldName newName // Cambiar nombre
*git show-branch: enseÃ±a las ramas
*git show-branch --all: enseÃ±a todas las ramas

ðŸ”¹git push
*git push -u origin [Branch en push]: para subir los commits a github

ðŸ”¹git pull origin main: trae los commits del github
  
ðŸ”¹git merge [branchName]: une un branch con otro

ðŸ”¹git config -l : configuracion de correo y usuario
*git config --global user.email "tu correo": cambiar correo

ðŸ”¹git push origin :refs/tags/"nombre del tag": elimina el tag del github
*git tag -d "nombre del tag": elimina el tag del git